/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.onlineinteract.model.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Entity256Bytes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3389846280446708162L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Entity256Bytes\",\"namespace\":\"com.onlineinteract.model.avro\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"intValue\",\"type\":\"int\"},{\"name\":\"longvalue\",\"type\":\"long\"},{\"name\":\"floatValue\",\"type\":\"float\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public int intValue;
  @Deprecated public long longvalue;
  @Deprecated public float floatValue;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Entity256Bytes() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param intValue The new value for intValue
   * @param longvalue The new value for longvalue
   * @param floatValue The new value for floatValue
   */
  public Entity256Bytes(java.lang.CharSequence name, java.lang.Integer intValue, java.lang.Long longvalue, java.lang.Float floatValue) {
    this.name = name;
    this.intValue = intValue;
    this.longvalue = longvalue;
    this.floatValue = floatValue;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return intValue;
    case 2: return longvalue;
    case 3: return floatValue;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: intValue = (java.lang.Integer)value$; break;
    case 2: longvalue = (java.lang.Long)value$; break;
    case 3: floatValue = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'intValue' field.
   * @return The value of the 'intValue' field.
   */
  public java.lang.Integer getIntValue() {
    return intValue;
  }

  /**
   * Sets the value of the 'intValue' field.
   * @param value the value to set.
   */
  public void setIntValue(java.lang.Integer value) {
    this.intValue = value;
  }

  /**
   * Gets the value of the 'longvalue' field.
   * @return The value of the 'longvalue' field.
   */
  public java.lang.Long getLongvalue() {
    return longvalue;
  }

  /**
   * Sets the value of the 'longvalue' field.
   * @param value the value to set.
   */
  public void setLongvalue(java.lang.Long value) {
    this.longvalue = value;
  }

  /**
   * Gets the value of the 'floatValue' field.
   * @return The value of the 'floatValue' field.
   */
  public java.lang.Float getFloatValue() {
    return floatValue;
  }

  /**
   * Sets the value of the 'floatValue' field.
   * @param value the value to set.
   */
  public void setFloatValue(java.lang.Float value) {
    this.floatValue = value;
  }

  /**
   * Creates a new Entity256Bytes RecordBuilder.
   * @return A new Entity256Bytes RecordBuilder
   */
  public static com.onlineinteract.model.avro.Entity256Bytes.Builder newBuilder() {
    return new com.onlineinteract.model.avro.Entity256Bytes.Builder();
  }

  /**
   * Creates a new Entity256Bytes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Entity256Bytes RecordBuilder
   */
  public static com.onlineinteract.model.avro.Entity256Bytes.Builder newBuilder(com.onlineinteract.model.avro.Entity256Bytes.Builder other) {
    return new com.onlineinteract.model.avro.Entity256Bytes.Builder(other);
  }

  /**
   * Creates a new Entity256Bytes RecordBuilder by copying an existing Entity256Bytes instance.
   * @param other The existing instance to copy.
   * @return A new Entity256Bytes RecordBuilder
   */
  public static com.onlineinteract.model.avro.Entity256Bytes.Builder newBuilder(com.onlineinteract.model.avro.Entity256Bytes other) {
    return new com.onlineinteract.model.avro.Entity256Bytes.Builder(other);
  }

  /**
   * RecordBuilder for Entity256Bytes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Entity256Bytes>
    implements org.apache.avro.data.RecordBuilder<Entity256Bytes> {

    private java.lang.CharSequence name;
    private int intValue;
    private long longvalue;
    private float floatValue;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.onlineinteract.model.avro.Entity256Bytes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.intValue)) {
        this.intValue = data().deepCopy(fields()[1].schema(), other.intValue);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.longvalue)) {
        this.longvalue = data().deepCopy(fields()[2].schema(), other.longvalue);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.floatValue)) {
        this.floatValue = data().deepCopy(fields()[3].schema(), other.floatValue);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Entity256Bytes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.onlineinteract.model.avro.Entity256Bytes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.intValue)) {
        this.intValue = data().deepCopy(fields()[1].schema(), other.intValue);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.longvalue)) {
        this.longvalue = data().deepCopy(fields()[2].schema(), other.longvalue);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.floatValue)) {
        this.floatValue = data().deepCopy(fields()[3].schema(), other.floatValue);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.onlineinteract.model.avro.Entity256Bytes.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.onlineinteract.model.avro.Entity256Bytes.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'intValue' field.
      * @return The value.
      */
    public java.lang.Integer getIntValue() {
      return intValue;
    }

    /**
      * Sets the value of the 'intValue' field.
      * @param value The value of 'intValue'.
      * @return This builder.
      */
    public com.onlineinteract.model.avro.Entity256Bytes.Builder setIntValue(int value) {
      validate(fields()[1], value);
      this.intValue = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'intValue' field has been set.
      * @return True if the 'intValue' field has been set, false otherwise.
      */
    public boolean hasIntValue() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'intValue' field.
      * @return This builder.
      */
    public com.onlineinteract.model.avro.Entity256Bytes.Builder clearIntValue() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'longvalue' field.
      * @return The value.
      */
    public java.lang.Long getLongvalue() {
      return longvalue;
    }

    /**
      * Sets the value of the 'longvalue' field.
      * @param value The value of 'longvalue'.
      * @return This builder.
      */
    public com.onlineinteract.model.avro.Entity256Bytes.Builder setLongvalue(long value) {
      validate(fields()[2], value);
      this.longvalue = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'longvalue' field has been set.
      * @return True if the 'longvalue' field has been set, false otherwise.
      */
    public boolean hasLongvalue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'longvalue' field.
      * @return This builder.
      */
    public com.onlineinteract.model.avro.Entity256Bytes.Builder clearLongvalue() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'floatValue' field.
      * @return The value.
      */
    public java.lang.Float getFloatValue() {
      return floatValue;
    }

    /**
      * Sets the value of the 'floatValue' field.
      * @param value The value of 'floatValue'.
      * @return This builder.
      */
    public com.onlineinteract.model.avro.Entity256Bytes.Builder setFloatValue(float value) {
      validate(fields()[3], value);
      this.floatValue = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'floatValue' field has been set.
      * @return True if the 'floatValue' field has been set, false otherwise.
      */
    public boolean hasFloatValue() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'floatValue' field.
      * @return This builder.
      */
    public com.onlineinteract.model.avro.Entity256Bytes.Builder clearFloatValue() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Entity256Bytes build() {
      try {
        Entity256Bytes record = new Entity256Bytes();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.intValue = fieldSetFlags()[1] ? this.intValue : (java.lang.Integer) defaultValue(fields()[1]);
        record.longvalue = fieldSetFlags()[2] ? this.longvalue : (java.lang.Long) defaultValue(fields()[2]);
        record.floatValue = fieldSetFlags()[3] ? this.floatValue : (java.lang.Float) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
